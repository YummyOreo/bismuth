---
source: bismuth-parser/src/lib.rs
expression: snapshot(parser)
---
Parser {
    lexer: Lexer {
        path: "/test/",
        chars: [
            't',
            'e',
            's',
            't',
            ' ',
            '\n',
            ' ',
            't',
            'e',
            's',
            't',
            ' ',
            '*',
            '_',
            '_',
            't',
            'e',
            's',
            't',
            '_',
            '_',
            '*',
            ' ',
            'n',
            'o',
            'n',
            'e',
        ],
        position: 27,
        current_token: Token {
            start: 27,
            end: 27,
            kind: EndOfFile,
            text: [],
        },
        tokens: [
            Token {
                start: 0,
                end: 0,
                kind: StartOfFile,
                text: [],
            },
            Token {
                start: 0,
                end: 4,
                kind: Text,
                text: [
                    't',
                    'e',
                    's',
                    't',
                    ' ',
                ],
            },
            Token {
                start: 5,
                end: 5,
                kind: EndOfLine,
                text: [
                    '\n',
                ],
            },
            Token {
                start: 6,
                end: 6,
                kind: Whitespace,
                text: [
                    ' ',
                ],
            },
            Token {
                start: 7,
                end: 11,
                kind: Text,
                text: [
                    't',
                    'e',
                    's',
                    't',
                    ' ',
                ],
            },
            Token {
                start: 12,
                end: 12,
                kind: Asterisk,
                text: [
                    '*',
                ],
            },
            Token {
                start: 13,
                end: 14,
                kind: Underscore,
                text: [
                    '_',
                    '_',
                ],
            },
            Token {
                start: 15,
                end: 18,
                kind: Text,
                text: [
                    't',
                    'e',
                    's',
                    't',
                ],
            },
            Token {
                start: 19,
                end: 20,
                kind: Underscore,
                text: [
                    '_',
                    '_',
                ],
            },
            Token {
                start: 21,
                end: 21,
                kind: Asterisk,
                text: [
                    '*',
                ],
            },
            Token {
                start: 22,
                end: 26,
                kind: Text,
                text: [
                    ' ',
                    'n',
                    'o',
                    'n',
                    'e',
                ],
            },
            Token {
                start: 27,
                end: 27,
                kind: EndOfFile,
                text: [],
            },
        ],
    },
    current_token_index: 11,
    metadata: Metadata {
        absolute_path: "/test/",
        fontmatter: FontMatter {
            title: Some(
                "test",
            ),
            path: Some(
                "/test/",
            ),
            kind: Some(
                "default",
            ),
            values: None,
        },
    },
    current_element: None,
    state: State {
        new_line: false,
        inside: [],
        indent_level: 0,
    },
    ast: Ast {
        elements: [
            Some(
                Element {
                    kind: Paragraph,
                    elements: [
                        Element {
                            kind: Text,
                            elements: [],
                            text: Some(
                                "test ",
                            ),
                            attrs: {},
                            id: [Random],
                        },
                    ],
                    text: None,
                    attrs: {},
                    id: [Random],
                },
            ),
            Some(
                Element {
                    kind: EndOfLine,
                    elements: [],
                    text: None,
                    attrs: {},
                    id: [Random],
                },
            ),
            Some(
                Element {
                    kind: Paragraph,
                    elements: [
                        Element {
                            kind: Text,
                            elements: [],
                            text: Some(
                                "test ",
                            ),
                            attrs: {},
                            id: [Random],
                        },
                        Element {
                            kind: Italic,
                            elements: [
                                Element {
                                    kind: Bold,
                                    elements: [
                                        Element {
                                            kind: Text,
                                            elements: [],
                                            text: Some(
                                                "test",
                                            ),
                                            attrs: {},
                                            id: [Random],
                                        },
                                    ],
                                    text: None,
                                    attrs: {},
                                    id: [Random],
                                },
                            ],
                            text: None,
                            attrs: {},
                            id: [Random],
                        },
                        Element {
                            kind: Text,
                            elements: [],
                            text: Some(
                                " none",
                            ),
                            attrs: {},
                            id: [Random],
                        },
                    ],
                    text: None,
                    attrs: {},
                    id: [Random],
                },
            ),
        ],
    },
}
