---
source: bismuth-parser/src/lib.rs
expression: snapshot(parser)
---
Parser {
    lexer: Lexer {
        path: "/test/",
        chars: [
            '#',
            '#',
            ' ',
            'h',
            'e',
            'a',
            'd',
            'e',
            'r',
            '\n',
            '>',
            ' ',
            'b',
            'l',
            'o',
            'c',
            'k',
            'q',
            'u',
            'o',
            't',
            'e',
            '\n',
            '-',
            ' ',
            'l',
            'i',
            's',
            't',
            '\n',
            '\t',
            '-',
            ' ',
            'i',
            't',
            'e',
            'm',
            '\n',
            ' ',
            ' ',
            ' ',
            ' ',
            ' ',
            ' ',
            ' ',
            ' ',
            '-',
            ' ',
            'l',
            'e',
            'v',
            'e',
            'l',
            ' ',
            '_',
            '*',
            '*',
            't',
            'w',
            'o',
            '?',
            '?',
            '*',
            '*',
            '_',
        ],
        position: 65,
        current_token: Token {
            start: 65,
            end: 65,
            kind: EndOfFile,
            text: [],
        },
        tokens: [
            Token {
                start: 0,
                end: 0,
                kind: StartOfFile,
                text: [],
            },
            Token {
                start: 0,
                end: 1,
                kind: Hash,
                text: [
                    '#',
                    '#',
                ],
            },
            Token {
                start: 2,
                end: 8,
                kind: Text,
                text: [
                    ' ',
                    'h',
                    'e',
                    'a',
                    'd',
                    'e',
                    'r',
                ],
            },
            Token {
                start: 9,
                end: 9,
                kind: EndOfLine,
                text: [
                    '\n',
                ],
            },
            Token {
                start: 10,
                end: 10,
                kind: GreaterThan,
                text: [
                    '>',
                ],
            },
            Token {
                start: 11,
                end: 21,
                kind: Text,
                text: [
                    ' ',
                    'b',
                    'l',
                    'o',
                    'c',
                    'k',
                    'q',
                    'u',
                    'o',
                    't',
                    'e',
                ],
            },
            Token {
                start: 22,
                end: 22,
                kind: EndOfLine,
                text: [
                    '\n',
                ],
            },
            Token {
                start: 23,
                end: 23,
                kind: Dash,
                text: [
                    '-',
                ],
            },
            Token {
                start: 24,
                end: 28,
                kind: Text,
                text: [
                    ' ',
                    'l',
                    'i',
                    's',
                    't',
                ],
            },
            Token {
                start: 29,
                end: 29,
                kind: EndOfLine,
                text: [
                    '\n',
                ],
            },
            Token {
                start: 30,
                end: 30,
                kind: Tab,
                text: [
                    '\t',
                ],
            },
            Token {
                start: 31,
                end: 31,
                kind: Dash,
                text: [
                    '-',
                ],
            },
            Token {
                start: 32,
                end: 36,
                kind: Text,
                text: [
                    ' ',
                    'i',
                    't',
                    'e',
                    'm',
                ],
            },
            Token {
                start: 37,
                end: 37,
                kind: EndOfLine,
                text: [
                    '\n',
                ],
            },
            Token {
                start: 38,
                end: 45,
                kind: Whitespace,
                text: [
                    ' ',
                    ' ',
                    ' ',
                    ' ',
                    ' ',
                    ' ',
                    ' ',
                    ' ',
                ],
            },
            Token {
                start: 46,
                end: 46,
                kind: Dash,
                text: [
                    '-',
                ],
            },
            Token {
                start: 47,
                end: 53,
                kind: Text,
                text: [
                    ' ',
                    'l',
                    'e',
                    'v',
                    'e',
                    'l',
                    ' ',
                ],
            },
            Token {
                start: 54,
                end: 54,
                kind: Underscore,
                text: [
                    '_',
                ],
            },
            Token {
                start: 55,
                end: 56,
                kind: Asterisk,
                text: [
                    '*',
                    '*',
                ],
            },
            Token {
                start: 57,
                end: 61,
                kind: Text,
                text: [
                    't',
                    'w',
                    'o',
                    '?',
                    '?',
                ],
            },
            Token {
                start: 62,
                end: 63,
                kind: Asterisk,
                text: [
                    '*',
                    '*',
                ],
            },
            Token {
                start: 64,
                end: 64,
                kind: Underscore,
                text: [
                    '_',
                ],
            },
            Token {
                start: 65,
                end: 65,
                kind: EndOfFile,
                text: [],
            },
        ],
    },
    current_token_index: 22,
    metadata: Metadata {
        absolute_path: "/test/",
        fontmatter: FontMatter {
            title: Some(
                "test",
            ),
            path: Some(
                "/test/",
            ),
            kind: Some(
                "default",
            ),
            values: None,
        },
    },
    current_element: None,
    state: State {
        new_line: false,
        inside: [],
        indent_level: 2,
    },
    ast: Ast {
        elements: [
            Some(
                Element {
                    kind: Header,
                    elements: [
                        Element {
                            kind: Text,
                            elements: [],
                            text: Some(
                                " header",
                            ),
                            attrs: {},
                            id: [Random],
                        },
                    ],
                    text: None,
                    attrs: {
                        "level": "2",
                    },
                    id: [Random],
                },
            ),
            Some(
                Element {
                    kind: EndOfLine,
                    elements: [],
                    text: None,
                    attrs: {},
                    id: [Random],
                },
            ),
            Some(
                Element {
                    kind: Blockquote,
                    elements: [
                        Element {
                            kind: Text,
                            elements: [],
                            text: Some(
                                " blockquote",
                            ),
                            attrs: {},
                            id: [Random],
                        },
                    ],
                    text: None,
                    attrs: {},
                    id: [Random],
                },
            ),
            Some(
                Element {
                    kind: EndOfLine,
                    elements: [],
                    text: None,
                    attrs: {},
                    id: [Random],
                },
            ),
            Some(
                Element {
                    kind: ListItem,
                    elements: [
                        Element {
                            kind: Text,
                            elements: [],
                            text: Some(
                                " list",
                            ),
                            attrs: {},
                            id: [Random],
                        },
                    ],
                    text: None,
                    attrs: {
                        "level": "0",
                    },
                    id: [Random],
                },
            ),
            Some(
                Element {
                    kind: EndOfLine,
                    elements: [],
                    text: None,
                    attrs: {},
                    id: [Random],
                },
            ),
            Some(
                Element {
                    kind: ListItem,
                    elements: [
                        Element {
                            kind: Text,
                            elements: [],
                            text: Some(
                                " item",
                            ),
                            attrs: {},
                            id: [Random],
                        },
                    ],
                    text: None,
                    attrs: {
                        "level": "1",
                    },
                    id: [Random],
                },
            ),
            Some(
                Element {
                    kind: EndOfLine,
                    elements: [],
                    text: None,
                    attrs: {},
                    id: [Random],
                },
            ),
            Some(
                Element {
                    kind: ListItem,
                    elements: [
                        Element {
                            kind: Text,
                            elements: [],
                            text: Some(
                                " level ",
                            ),
                            attrs: {},
                            id: [Random],
                        },
                        Element {
                            kind: Italic,
                            elements: [
                                Element {
                                    kind: Bold,
                                    elements: [
                                        Element {
                                            kind: Text,
                                            elements: [],
                                            text: Some(
                                                "two??",
                                            ),
                                            attrs: {},
                                            id: [Random],
                                        },
                                    ],
                                    text: None,
                                    attrs: {},
                                    id: [Random],
                                },
                            ],
                            text: None,
                            attrs: {},
                            id: [Random],
                        },
                    ],
                    text: None,
                    attrs: {
                        "level": "2",
                    },
                    id: [Random],
                },
            ),
        ],
    },
}
